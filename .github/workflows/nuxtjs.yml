name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Permisos necesarios para GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permitir solo una ejecuci칩n concurrente de deploy
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.15'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: nuxt

      - name: Build with Nuxt
        run: npm run build
        env:
          # Variables de entorno para el build est치tico
          NITRO_PRESET: github-pages
          NUXT_APP_BASE_URL: ${{ vars.NUXT_APP_BASE_URL || '/' }}
          # MongoDB y JWT no se usar치n en el build est치tico
          # pero las definimos para evitar errores de build
          MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb://localhost:27017/fish_monitor_v2' }}
          JWT_SECRET: ${{ secrets.JWT_SECRET || 'fallback-secret' }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET || 'fallback-refresh-secret' }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.output/public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
